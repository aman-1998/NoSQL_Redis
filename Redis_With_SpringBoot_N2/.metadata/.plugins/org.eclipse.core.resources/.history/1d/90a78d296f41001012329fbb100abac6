package personal.learning;

import org.springframework.beans.factory.annotation.Value;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.data.redis.connection.RedisConnectionFactory;
import org.springframework.data.redis.connection.RedisStandaloneConfiguration;
import org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory;
import org.springframework.data.redis.core.RedisTemplate;
import org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer;
import org.springframework.data.redis.serializer.StringRedisSerializer;

import io.lettuce.core.RedisURI;

@Configuration
public class RedisConfig {
	
	@Value("${my.redis.uri}")
	private String redisURI;
	
	@Bean
    public RedisConnectionFactory redisConnectionFactory() {
		
		
		//return new LettuceConnectionFactory("localhost", 6379);
	    
	    RedisURI redisUri = RedisURI.create(redisURI);
	    RedisStandaloneConfiguration config = new RedisStandaloneConfiguration();
	    config.setHostName(redisUri.getHost());
	    config.setPort(redisUri.getPort());
	    
	    
	    return new LettuceConnectionFactory(new RedisStandaloneConfiguration(redisUri.getHost(), redisUri.getPort()));
		
	    
		RedisStandaloneConfiguration config = new RedisStandaloneConfiguration();
	    config.setHostName("localhost");
	    config.setPort(6379);
	    return new LettuceConnectionFactory(config);
    }

    @Bean
    public RedisTemplate<String, Object> redisTemplate(RedisConnectionFactory connectionFactory) {
        RedisTemplate<String, Object> template = new RedisTemplate<>();
        template.setConnectionFactory(connectionFactory);
        
        // Key serializer
        template.setKeySerializer(new StringRedisSerializer());
        template.setHashKeySerializer(new StringRedisSerializer());

        // Value serializer
        template.setValueSerializer(new GenericJackson2JsonRedisSerializer());
        template.setHashValueSerializer(new GenericJackson2JsonRedisSerializer());

        template.setEnableTransactionSupport(true);
        template.afterPropertiesSet();
        return template;
    }

}
